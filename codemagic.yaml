workflows:
  ios-workflow:
    name: iOS - App Store Release
    integrations:
      app_store_connect: AppStoreAPIAccessKey

    environment:
      flutter: stable
      ios_signing:
        provisioning_profiles:
          - profile: "UrjaViewAppStoreProfile"
        certificates:
          - certificate: "codemagicSigningCertificate"

    scripts:
      
      - name: Install dependencies
        script: |
          flutter pub get

      - name: Flutter analyze
        script: |
          flutter analyze --fatal-infos
      
      - name: Generate screenshots
        script: |
          ./scripts/generate_screenshots.sh
      
      - name: Set up App Store Connect API key
        script: |
          echo "$APP_STORE_CONNECT_API_KEY" > ios/app_store_connect.json

      - name: Build iOS release
        script: |
          flutter build ios --release --no-codesign

      - name: Automatic code signing for iOS
        script: |
          xcode-project use-profiles
          xcode-project build-ipa --workspace ios/Runner.xcworkspace --scheme Runner
      
      - name: Upload screenshots to App Store Connect
        script: |
          cd ios
          bundle install
          bundle exec fastlane upload_screenshots

    artifacts:
      - build/ios/ipa/*.ipa

    publishing:
      app_store_connect:
        auth: integration
        submit_to_testflight: true
        expire_build_submitted_for_review: true

    triggering:
      events:
        - tag
      tag_patterns:
        - pattern: "ios-*"
          include: true
      cancel_previous_builds: true

  android-workflow:
    name: Android - Google Play Release

    environment:
      flutter: stable
      android_signing:
        - androidStoreKey

    scripts:
      - name: Install dependencies
        script: |
          flutter pub get

      - name: Flutter analyze
        script: |
          flutter analyze --fatal-infos
      
      - name: Generate screenshots
        script: |
          ./scripts/generate_screenshots.sh
      
      - name: Set up Google Play credentials
        script: |
          echo "$GCLOUD_SERVICE_ACCOUNT_CREDENTIALS" > android/google-play-store.json

      - name: Build Android App Bundle
        script: |
          flutter build appbundle --release
      
      - name: Upload screenshots to Google Play
        script: |
          cd android
          bundle install
          bundle exec fastlane upload_screenshots

    artifacts:
      - build/**/outputs/**/*.aab

    publishing:
      google_play:
        credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
        track: internal
        in_app_update_priority: 3

    triggering:
      events:
        - tag
      tag_patterns:
        - pattern: "android-*"
          include: true
      cancel_previous_builds: true