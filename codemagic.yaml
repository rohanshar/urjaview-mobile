workflows:
  ios-workflow:
    name: iOS - App Store Release
    integrations:
      app_store_connect: AppStoreAPIAccessKey

    environment:
      flutter: stable
      ios_signing:
        provisioning_profiles:
          - profile: "UrjaViewAppStoreProfile"
        certificates:
          - certificate: "codemagicSigningCertificate"

    scripts:
      
      - name: Install dependencies
        script: |
          flutter pub get

      - name: Flutter analyze
        script: |
          flutter analyze --fatal-infos
      
      - name: Set up App Store Connect API key
        script: |
          echo "$APP_STORE_CONNECT_API_KEY" > ios/app_store_connect.json

      - name: Update build number
        script: |
          # Extract version from tag (e.g., ios-1.0.22 -> 1.0.22)
          VERSION_TAG="${CM_TAG##*-}"
          echo "Version from tag: $VERSION_TAG"
          
          # Use PROJECT_BUILD_NUMBER for sequential numbering
          BUILD_NUMBER="${PROJECT_BUILD_NUMBER:-1}"
          echo "Build number: $BUILD_NUMBER"
          
          # Update pubspec.yaml with new version and build number
          sed -i '' "s/^version: .*/version: $VERSION_TAG+$BUILD_NUMBER/" pubspec.yaml
          
          echo "Updated version to: $VERSION_TAG+$BUILD_NUMBER"

      - name: Build iOS release
        script: |
          BUILD_NUMBER="${PROJECT_BUILD_NUMBER:-1}"
          flutter build ios --release --no-codesign --build-number=$BUILD_NUMBER

      - name: Automatic code signing for iOS
        script: |
          xcode-project use-profiles
          xcode-project build-ipa --workspace ios/Runner.xcworkspace --scheme Runner

    artifacts:
      - build/ios/ipa/*.ipa

    publishing:
      app_store_connect:
        auth: integration
        submit_to_testflight: true
        expire_build_submitted_for_review: true

    triggering:
      events:
        - tag
      tag_patterns:
        - pattern: "ios-*"
          include: true
      cancel_previous_builds: true

  android-workflow:
    name: Android - Google Play Release

    environment:
      flutter: stable
      # Android signing disabled until keystore is configured
      # To enable:
      # 1. Upload keystore file to Codemagic
      # 2. Create androidStoreKey environment group with signing credentials
      # 3. Uncomment the android_signing section below
      
      # android_signing:
      #   - androidStoreKey

    scripts:
      - name: Install dependencies
        script: |
          flutter pub get

      - name: Flutter analyze
        script: |
          flutter analyze --fatal-infos
      
      - name: Update build number
        script: |
          # Extract version from tag (e.g., android-1.0.4 -> 1.0.4)
          VERSION_TAG="${CM_TAG##*-}"
          echo "Version from tag: $VERSION_TAG"
          
          # Use PROJECT_BUILD_NUMBER for sequential numbering
          BUILD_NUMBER="${PROJECT_BUILD_NUMBER:-1}"
          echo "Build number: $BUILD_NUMBER"
          
          # Update pubspec.yaml with new version and build number
          sed -i '' "s/^version: .*/version: $VERSION_TAG+$BUILD_NUMBER/" pubspec.yaml
          
          echo "Updated version to: $VERSION_TAG+$BUILD_NUMBER"

      - name: Build Android App Bundle
        script: |
          BUILD_NUMBER="${PROJECT_BUILD_NUMBER:-1}"
          flutter build appbundle --release --build-number=$BUILD_NUMBER

    artifacts:
      - build/**/outputs/**/*.aab

    # Publishing disabled until Google Play credentials are configured
    # To enable:
    # 1. Create a service account in Google Cloud Console
    # 2. Add the JSON key as GCLOUD_SERVICE_ACCOUNT_CREDENTIALS in Codemagic
    # 3. Uncomment the publishing section below
    
    # publishing:
    #   google_play:
    #     credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
    #     track: internal
    #     in_app_update_priority: 3

    triggering:
      events:
        - tag
      tag_patterns:
        - pattern: "android-*"
          include: true
      cancel_previous_builds: true